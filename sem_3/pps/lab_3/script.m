DATA_PATH = "poland-temperature-data-2022.csv";
YEAR = 2022;
MONTH_INDEXING_ARRAY = 1:12;
MONTH_DATES_ARRAY = getDatetimeMonthArrayForYear(YEAR);

data_table = readtable(DATA_PATH);
data_table_sliced_by_month = arrayfun( ...
    @(month) getMonthSlice(data_table, month), MONTH_DATES_ARRAY, 'uniformOutput', false ...
);

mean_yearly_temperature = mean(data_table.temperature, 'omitnan');
mean_temperature_by_month_array = cellfun( ...
    @(month) mean(month.temperature, 'omitnan'), ...
    data_table_sliced_by_month ...
);

std_by_month = cellfun( ...
    @(month_table) std(month_table.temperature, 'omitnan'), ...
    data_table_sliced_by_month ...
);
autocorr_result = xcorr(mean_temperature_by_month_array);
histogram(data_table.temperature);

function month_slice = getMonthSlice(data_table, target_month)
    % Convert 'date' column to datetime format if not already
    if ~isa(data_table.date, 'datetime')
        data_table.date = datetime(data_table.date, 'InputFormat', 'yyyy-MM-dd HH:mm:ss');
    end

    target_month_year = [month(target_month), year(target_month)];
    month_slice = data_table( ...
        month(data_table.date) == target_month_year(1) ...
        & year(data_table.date) == target_month_year(2), ...
    :);
end

function month_dates_array = getDatetimeMonthArrayForYear(year)
    month_dates_array = arrayfun( ...
    @(month_index) ...
        datetime( ...
            sprintf("%02d-%d", month_index, year), ...
            'InputFormat', ...
            'MM-yyyy' ...
        ), ...
    1:12 ...
);
end
